name: Deploy Ginger

on:
  push:
    branches: [ main ]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  ECR: 459210687693.dkr.ecr.eu-west-3.amazonaws.com
  IMAGE: myapp

jobs:
  deploy:
    name: Build & Notify Humanitec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set Tag with SHA
        run: echo "TAG=`echo $GITHUB_SHA | cut -c 1-7`" >> $GITHUB_ENV

      - run: |
          aws ecr get-login-password --region eu-west-3 \
            | docker login \
                --username $username \
                --password-stdin \
                $ECR
        env:
          username: ${{ secrets.ECR_USER }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_POC_4 }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_POC_4 }}
      - run: npm install
      - run: docker build --platform linux/amd64 . -t $ECR/$IMAGE:$TAG
      - run: docker push $ECR/$IMAGE:$TAG

      - name: Inform Humanitec
        run: |-
          curl \
            --request POST 'https://api.humanitec.io/orgs/${{ secrets.HUMANITEC_ORG_ID_POC_4 }}/images/myapp/builds' \
            --header 'Authorization: Bearer ${{ secrets.HUMANITEC_TOKEN_POC_4 }}' \
            --header 'Content-Type: application/json' \
            --data-raw '{
                "branch": "'$GITHUB_REF_NAME'",
                "commit": "'$GITHUB_SHA'",
                "image": "'$ECR/$IMAGE:$TAG'",
                "tags": ["'$TAG'"]
            }'

      - name: Create ephemeral CI Environment
        run: |
          set -e
          CI_ENV_ID=ginger-ci-${GITHUB_SHA:0:10}
          ./create_ci_env.sh "${{ secrets.HUMANITEC_TOKEN_POC_4 }}" "$CI_ENV_ID"
          
      - name: Deploy using score
        run: |
          CI_ENV_ID=ginger-ci-${GITHUB_SHA:0:10}
          ./deploy_to.sh "${{ secrets.HUMANITEC_ORG_ID_POC_4 }}" "${{ secrets.HUMANITEC_TOKEN_POC_4 }}" $CI_ENV_ID

      - name: Run integration tests
        run: |
          CI_ENV_ID=ginger-ci-${GITHUB_SHA:0:10}
          
          echo -n Retrieve the DNS name of $CI_ENV_ID
          APP_URL=""
          ATTEMPTS=0
          while [ $ATTEMPTS -lt 90 ] ; do
            sleep 2
            echo -n .
            let APP_URL=$(curl -fSs https://api.humanitec.io/orgs/htc-demo-04/apps/ginger/envs/$CI_ENV_ID/resources \
              --header 'Authorization: Bearer ${{ secrets.HUMANITEC_TOKEN_POC_4 }}' | \
              jq -r --arg id "modules.ginger.externals.dns" '.[] | select(.res_id == $id and .type == "dns").resource.host')
            let ATTEMPTS=ATTEMPTS+1
            [[ -n "$APP_URL" ]] && break
          done
          echo done
          export APP_URL
          
          
          if [[ -n $APP_URL ]]; then
            echo Running tests against URL $APP_URL
            # presumably there is a race condition here, as we need to wait for Humanitec to finish deploying our app
            npm run test
          else
            echo failed to fetch APP_URL after $ATTEMPTS attempts  
            exit 1
          fi

      - name: Delete CI env
        run: |
          CI_ENV_ID=ginger-ci-${GITHUB_SHA:0:10}
          curl -fSs -X DELETE https://api.humanitec.io/orgs/htc-demo-04/apps/ginger/envs/$CI_ENV_ID \
            --header 'Authorization: Bearer ${{ secrets.HUMANITEC_TOKEN_POC_4 }}'

      - name: promote to UAT
        run: |
          ./deploy_to.sh "${{ secrets.HUMANITEC_ORG_ID_POC_4 }}" "${{ secrets.HUMANITEC_TOKEN_POC_4 }}" uat